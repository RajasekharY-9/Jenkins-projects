package com.insta.entity;

import java.util.ArrayList;

import java.util.HashSet;
import java.util.List;
import java.util.Objects;
import java.util.Set;

import com.insta.dto.UserDTO;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.ElementCollection;
import jakarta.persistence.Embedded;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

@Entity
@Table(name = "users")
public class User {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column
	private Integer id;
	private String username;
	private String password;
	private String mobile;
	private String website;
	private String bio;
	private String gender;
	private String image;
	private String email;

	@Embedded
	@ElementCollection
	private Set<UserDTO> followers = new HashSet<>();
	@Embedded
	@ElementCollection
	private Set<UserDTO> following = new HashSet<>();

	@OneToMany(cascade = CascadeType.ALL)
	List<Story> stories = new ArrayList<>();

	@ManyToOne
	List<Post> savedPosts = new ArrayList<>();

	public User() {
		super();
		// TODO Auto-generated constructor stub
	}

	public User(Integer id, String username, String password, String mobile, String website, String bio, String gender,
			String image, String email, Set<UserDTO> followers, Set<UserDTO> following, List<Story> stories,
			List<Post> savedPosts) {
		super();
		this.id = id;
		this.username = username;
		this.password = password;
		this.mobile = mobile;
		this.website = website;
		this.bio = bio;
		this.gender = gender;
		this.image = image;
		this.email = email;
		this.followers = followers;
		this.following = following;
		this.stories = stories;
		this.savedPosts = savedPosts;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getMobile() {
		return mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	public String getWebsite() {
		return website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	public String getBio() {
		return bio;
	}

	public void setBio(String bio) {
		this.bio = bio;
	}

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	public String getImage() {
		return image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public Set<UserDTO> getFollowers() {
		return followers;
	}

	public void setFollowers(Set<UserDTO> followers) {
		this.followers = followers;
	}

	public Set<UserDTO> getFollowing() {
		return following;
	}

	public void setFollowing(Set<UserDTO> following) {
		this.following = following;
	}

	public List<Story> getStories() {
		return stories;
	}

	public void setStories(List<Story> stories) {
		this.stories = stories;
	}

	public List<Post> getSavedPosts() {
		return savedPosts;
	}

	public void setSavedPosts(List<Post> savedPosts) {
		this.savedPosts = savedPosts;
	}

	@Override
	public int hashCode() {
		return Objects.hash(bio, email, followers, following, gender, id, image, mobile, password, savedPosts, stories,
				username, website);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		User other = (User) obj;
		return Objects.equals(bio, other.bio) && Objects.equals(email, other.email)
				&& Objects.equals(followers, other.followers) && Objects.equals(following, other.following)
				&& Objects.equals(gender, other.gender) && Objects.equals(id, other.id)
				&& Objects.equals(image, other.image) && Objects.equals(mobile, other.mobile)
				&& Objects.equals(password, other.password) && Objects.equals(savedPosts, other.savedPosts)
				&& Objects.equals(stories, other.stories) && Objects.equals(username, other.username)
				&& Objects.equals(website, other.website);
	}

	

}