package com.insta.entity;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Objects;
import java.util.Set;

import com.insta.dto.UserDTO;

import jakarta.persistence.AttributeOverride;
import jakarta.persistence.AttributeOverrides;
import jakarta.persistence.Column;
import jakarta.persistence.ElementCollection;
import jakarta.persistence.Embedded;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

@Entity
@Table(name="posts")
public class Post {

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	private Integer id;
	
	private String caption;
	
	private String location;
	
	private String image;
	
	private LocalDateTime createdAt;
	@Embedded
	 @AttributeOverrides({
	       @AttributeOverride(name="id", column=@Column(columnDefinition = "user_id")),
	       @AttributeOverride(name="email", column=@Column(columnDefinition = "user_email"))
	   })
	private UserDTO userDTO;
	
	@OneToMany
	private List<Comment> comments=new ArrayList<>();
	
	
	@Embedded
	@ElementCollection
	@JoinTable(name="likedByUsers",joinColumns = @JoinColumn(columnDefinition ="user_id"))
	private Set<UserDTO> likedByUsers=new HashSet<>();


	public Post(Integer id, String caption, String location, String image, LocalDateTime createdAt, UserDTO userDTO,
			List<Comment> comments, Set<UserDTO> likedByUsers) {
		super();
		this.id = id;
		this.caption = caption;
		this.location = location;
		this.image = image;
		this.createdAt = createdAt;
		this.userDTO = userDTO;
		this.comments = comments;
		this.likedByUsers = likedByUsers;
	}


	public Post() {
		super();
		// TODO Auto-generated constructor stub
	}


	public Integer getId() {
		return id;
	}


	public void setId(Integer id) {
		this.id = id;
	}


	public String getCaption() {
		return caption;
	}


	public void setCaption(String caption) {
		this.caption = caption;
	}


	public String getLocation() {
		return location;
	}


	public void setLocation(String location) {
		this.location = location;
	}


	public String getImage() {
		return image;
	}


	public void setImage(String image) {
		this.image = image;
	}


	public LocalDateTime getCreatedAt() {
		return createdAt;
	}


	public void setCreatedAt(LocalDateTime createdAt) {
		this.createdAt = createdAt;
	}


	public UserDTO getUserDTO() {
		return userDTO;
	}


	public void setUserDTO(UserDTO userDTO) {
		this.userDTO = userDTO;
	}


	public List<Comment> getComments() {
		return comments;
	}


	public void setComments(List<Comment> comments) {
		this.comments = comments;
	}


	public Set<UserDTO> getLikedByUsers() {
		return likedByUsers;
	}


	public void setLikedByUsers(Set<UserDTO> likedByUsers) {
		this.likedByUsers = likedByUsers;
	}


	@Override
	public int hashCode() {
		return Objects.hash(caption, comments, createdAt, id, image, likedByUsers, location, userDTO);
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Post other = (Post) obj;
		return Objects.equals(caption, other.caption) && Objects.equals(comments, other.comments)
				&& Objects.equals(createdAt, other.createdAt) && Objects.equals(id, other.id)
				&& Objects.equals(image, other.image) && Objects.equals(likedByUsers, other.likedByUsers)
				&& Objects.equals(location, other.location) && Objects.equals(userDTO, other.userDTO);
	}
	
	
	
	
	
	
	
}
