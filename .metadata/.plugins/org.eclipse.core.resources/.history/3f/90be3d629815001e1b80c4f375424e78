package com.infyme.account.entity.dto;

import java.time.LocalDate;

import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

public class AccountDTO  {
	 @NotNull(message = "Account number cannot be null")
	 @Min(value=7,message="Account number should have a minimum length of 7")
	  //  @Max(value=10,message="Account number should have a minimum length of 7")
	   // @Size(min = 7, message = "Account number should have a minimum length of 7")
	    private Long accountNumber;

	 

	    @NotBlank(message = "Bank name cannot be null or blank")
	    @Size(min = 5, max = 15, message = "Bank name should have a minimum length of 5 and maximum length of 15")
	    private String bankName;

	 

	    @NotNull(message = "Balance cannot be null")
	    private Double balance;

	 

	    @NotBlank(message = "Account type cannot be null or blank")
	    @Size(min = 1, max = 10, message = "Account type should have a minimum length of 1 and maximum length of 10")
	    private String accountType;

	    
	 

	    @NotBlank(message = "IFSC code cannot be null or blank")
	    @Size(min = 1, max = 15, message = "IFSC code should have a minimum length of 1 and maximum length of 15")
	    private String ifscCode;

	 

	    @NotNull(message = "Opening date cannot be null")
	    private LocalDate openingDate;

	 

	    @NotNull(message = "Mobile number cannot be null")
	    @Min(value=10,message="mobileNumber should have a minimum length of 10")
	    @Max(value=10,message="mobileNumber should have a minimum length of 10")
	   // @Size(min = 10, max = 10, message = "Mobile number should have a length of 10")
	    private Long mobileNumber;



		public AccountDTO() {
			super();
			// TODO Auto-generated constructor stub
		}



		public AccountDTO(
				@NotNull(message = "Account number cannot be null") @Size(min = 7, message = "Account number should have a minimum length of 7") Long accountNumber,
				@NotBlank(message = "Bank name cannot be null or blank") @Size(min = 5, max = 15, message = "Bank name should have a minimum length of 5 and maximum length of 15") String bankName,
				@NotNull(message = "Balance cannot be null") Double balance,
				@NotBlank(message = "Account type cannot be null or blank") @Size(min = 1, max = 10, message = "Account type should have a minimum length of 1 and maximum length of 10") String accountType,
				@NotBlank(message = "IFSC code cannot be null or blank") @Size(min = 1, max = 15, message = "IFSC code should have a minimum length of 1 and maximum length of 15") String ifscCode,
				@NotNull(message = "Opening date cannot be null") LocalDate openingDate,
				@NotNull(message = "Mobile number cannot be null") @Size(min = 10, max = 10, message = "Mobile number should have a length of 10") Long mobileNumber) {
			super();
			this.accountNumber = accountNumber;
			this.bankName = bankName;
			this.balance = balance;
			this.accountType = accountType;
			this.ifscCode = ifscCode;
			this.openingDate = openingDate;
			this.mobileNumber = mobileNumber;
		}



		public Long getAccountNumber() {
			return accountNumber;
		}



		public void setAccountNumber(Long accountNumber) {
			this.accountNumber = accountNumber;
		}



		public String getBankName() {
			return bankName;
		}



		public void setBankName(String bankName) {
			this.bankName = bankName;
		}



		public Double getBalance() {
			return balance;
		}



		public void setBalance(Double balance) {
			this.balance = balance;
		}



		public String getAccountType() {
			return accountType;
		}



		public void setAccountType(String accountType) {
			this.accountType = accountType;
		}



		public String getIfscCode() {
			return ifscCode;
		}



		public void setIfscCode(String ifscCode) {
			this.ifscCode = ifscCode;
		}



		public LocalDate getOpeningDate() {
			return openingDate;
		}



		public void setOpeningDate(LocalDate openingDate) {
			this.openingDate = openingDate;
		}



		public Long getMobileNumber() {
			return mobileNumber;
		}



		public void setMobileNumber(Long mobileNumber) {
			this.mobileNumber = mobileNumber;
		}

	 
}
